apiVersion: apps/v1
kind: Deployment
metadata:
  name: ingress-default-backend
spec:
  selector:
    matchLabels:
      app: ingress-default-backend
  replicas: {{ .Values.replicas }}
  template:
    metadata:
      labels:
        app: ingress-default-backend
    spec:
      topologySpreadConstraints:
{{ toYaml .Values.topologySpreadConstraints | indent 7 }}
      affinity:
{{ toYaml .Values.affinity | indent 7 }}
      containers:
      - name: ingress-default-backend
        image: "{{ .Values.image }}:{{ .Values.tag }}"
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        command:
        - /app/ingress-default-backend
{{- if .Values.args }}
{{ toYaml .Values.args | indent 8 }}
{{- end }}
        resources:
{{ toYaml .Values.resources | indent 9 }}
        readinessProbe:
          httpGet:
            path: /healthz
            port: 80
          initialDelaySeconds: 3
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /healthz
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: ingress-default-backend
  labels:
    app: ingress-default-backend
spec:
  type: ClusterIP
  ports:
  - port: 80
    protocol: TCP
  selector:
    app: ingress-default-backend
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: ingress-default-backend
spec:
  minAvailable: {{ .Values.pdb.minAvailable }}
  selector:
    matchLabels:
      app: ingress-default-backend